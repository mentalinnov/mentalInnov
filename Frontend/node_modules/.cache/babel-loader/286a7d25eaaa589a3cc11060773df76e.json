{"ast":null,"code":"import axios from \"axios\";\nimport { INPUT_SUCCESS, INPUT_FAIL, SESSION_SUCCESS, SESSION_FAIL, MESSAGE_SUCCESS, MESSAGE_FAIL } from \"./types\";\nexport const userMessage = message => async dispatch => {\n  try {\n    dispatch({\n      type: INPUT_SUCCESS,\n      payload: message\n    });\n  } catch (err) {\n    dispatch({\n      type: INPUT_FAIL\n    });\n  }\n};\nexport const createSession = () => async dispatch => {\n  try {\n    const res = await axios.get(process.env.REACT_APP_BACKEND_URL + \"/api/watson/session\");\n    dispatch({\n      type: SESSION_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: SESSION_FAIL\n    });\n  }\n};\nexport const sendMessage = message => async dispatch => {\n  try {\n    const body = {\n      input: message,\n      session: localStorage.getItem(\"session\")\n    };\n    console.log(\"session\", body.session);\n    const res = await axios.post(process.env.REACT_APP_BACKEND_URL + \"/api/watson/message\", body);\n    dispatch({\n      type: MESSAGE_SUCCESS,\n      payload: res.data.output.generic[0].text\n    });\n  } catch (err) {\n    console.log(err);\n    dispatch({\n      type: MESSAGE_FAIL\n    });\n  }\n};","map":{"version":3,"sources":["/Users/Jadsaliba/Documents/GitHub/mentalInnov/mentalInnov/Frontend/src/actions/watson.js"],"names":["axios","INPUT_SUCCESS","INPUT_FAIL","SESSION_SUCCESS","SESSION_FAIL","MESSAGE_SUCCESS","MESSAGE_FAIL","userMessage","message","dispatch","type","payload","err","createSession","res","get","process","env","REACT_APP_BACKEND_URL","data","sendMessage","body","input","session","localStorage","getItem","console","log","post","output","generic","text"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,aADF,EAEEC,UAFF,EAGEC,eAHF,EAIEC,YAJF,EAKEC,eALF,EAMEC,YANF,QAOO,SAPP;AASA,OAAO,MAAMC,WAAW,GAAIC,OAAD,IAAa,MAAOC,QAAP,IAAoB;AAC1D,MAAI;AACFA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAET,aAAR;AAAuBU,MAAAA,OAAO,EAAEH;AAAhC,KAAD,CAAR;AACD,GAFD,CAEE,OAAOI,GAAP,EAAY;AACZH,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAER;AAAR,KAAD,CAAR;AACD;AACF,CANM;AAQP,OAAO,MAAMW,aAAa,GAAG,MAAM,MAAOJ,QAAP,IAAoB;AACrD,MAAI;AAEF,UAAMK,GAAG,GAAG,MAAMd,KAAK,CAACe,GAAN,CAAUC,OAAO,CAACC,GAAR,CAAYC,qBAAZ,GAAoC,qBAA9C,CAAlB;AACAT,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEP,eAAR;AAAyBQ,MAAAA,OAAO,EAAEG,GAAG,CAACK;AAAtC,KAAD,CAAR;AACD,GAJD,CAIE,OAAOP,GAAP,EAAY;AACZH,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEN;AAAR,KAAD,CAAR;AACD;AACF,CARM;AAUP,OAAO,MAAMgB,WAAW,GAAIZ,OAAD,IAAa,MAAOC,QAAP,IAAoB;AAC1D,MAAI;AACF,UAAMY,IAAI,GAAG;AAAEC,MAAAA,KAAK,EAAEd,OAAT;AAAkBe,MAAAA,OAAO,EAAEC,YAAY,CAACC,OAAb,CAAqB,SAArB;AAA3B,KAAb;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBN,IAAI,CAACE,OAA5B;AACA,UAAMT,GAAG,GAAG,MAAMd,KAAK,CAAC4B,IAAN,CAAWZ,OAAO,CAACC,GAAR,CAAYC,qBAAZ,GAAoC,qBAA/C,EAAsEG,IAAtE,CAAlB;AACAZ,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEL,eADC;AAEPM,MAAAA,OAAO,EAAEG,GAAG,CAACK,IAAJ,CAASU,MAAT,CAAgBC,OAAhB,CAAwB,CAAxB,EAA2BC;AAF7B,KAAD,CAAR;AAID,GARD,CAQE,OAAOnB,GAAP,EAAY;AACZc,IAAAA,OAAO,CAACC,GAAR,CAAYf,GAAZ;AACAH,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEJ;AAAR,KAAD,CAAR;AACD;AACF,CAbM","sourcesContent":["import axios from \"axios\";\nimport {\n  INPUT_SUCCESS,\n  INPUT_FAIL,\n  SESSION_SUCCESS,\n  SESSION_FAIL,\n  MESSAGE_SUCCESS,\n  MESSAGE_FAIL,\n} from \"./types\";\n\nexport const userMessage = (message) => async (dispatch) => {\n  try {\n    dispatch({ type: INPUT_SUCCESS, payload: message });\n  } catch (err) {\n    dispatch({ type: INPUT_FAIL });\n  }\n};\n\nexport const createSession = () => async (dispatch) => {\n  try {\n    \n    const res = await axios.get(process.env.REACT_APP_BACKEND_URL + \"/api/watson/session\");\n    dispatch({ type: SESSION_SUCCESS, payload: res.data });\n  } catch (err) {\n    dispatch({ type: SESSION_FAIL });\n  }\n};\n\nexport const sendMessage = (message) => async (dispatch) => {\n  try {\n    const body = { input: message, session: localStorage.getItem(\"session\")};\n    console.log(\"session\", body.session)\n    const res = await axios.post(process.env.REACT_APP_BACKEND_URL + \"/api/watson/message\", body);\n    dispatch({\n      type: MESSAGE_SUCCESS,\n      payload: res.data.output.generic[0].text,\n    });\n  } catch (err) {\n    console.log(err)\n    dispatch({ type: MESSAGE_FAIL });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}